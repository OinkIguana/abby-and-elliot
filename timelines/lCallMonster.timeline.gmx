<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<timeline>
  <entry>
    <step>0</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create monster
instance_create(view_xview[0] - 160, Player.y, Monster);
var xx = min(Player.x, Friend.x);
if(Friend.hungry) { //Ignore friend sometimes
    xx = Player.x;
}
xx -= 32;
Monster.hspeed = (xx - view_xview[0]) / 50;
message_add("Abby: Hey! Monster!");
Player.image_xscale = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>50</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dialog and start action
Monster.hspeed = 0;
Monster.x = floor(Monster.x);
message_add("Monster: Need something?");
var inst = instance_nearest(x, y, _WithAction);
if(distance_to_object(inst) &lt; 32 ) {
    if(!inst.didAction) {
        switch(inst.object_index) {
            case DeadTree:
                message_add("Abby: Yeah, could you knock this tree down to make a bridge?");
                message_add("Monster: Sure thing.");
                break;
            case AppleTree:
                message_add("Abby: Could you shake this tree to get the apples down? Elliot is super hungry.");
                message_add("Monster: Heh. My friend is super hungry too... I'll get them down.");
                break;
            case Gate:
                message_add("Abby: Can you open this gate?");
                message_add("Monster: Uh... No. In order to pass you must open the gate yourself. I'll be waiting for you on the other side.");
                break;
            case Heart:
                message_add("Abby: This tree seems a bit different. Almost smarter than the rest.");
                message_add("Monster: How observant of you... This tree is ---");
                message_add("(deep voice): Thank you, young monster. I'll take this from here.");
                message_add("Monster: Yes sir. See you kids!");
                break;
        }
    } else {
        message_add("Abby: I guess not.");
        message_add("Monster: Ok.");
    }
} else {
    message_add("Abby: I guess not.");
    message_add("Monster: Ok.");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>52</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start action when the monster starts to leave
if(!is_message() ) {
    var inst = instance_nearest(x, y, _WithAction);
    if(!inst.didAction) {
        if(distance_to_object(inst) &lt; 32) {
            with(inst) {
                doAction = true;
            }   
        }
    }
    Monster.hspeed = -(Monster.x - view_xview[0]) / 50;
} else {
    timeline_position = 51;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
  <entry>
    <step>102</step>
    <event>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy monster
if(room == rGate) {
    var dist = distance_to_object(Gate);
}
with(Monster) {
    if(room == rGate) {
        if(dist &lt; 32) {
            x = room_width + 160;
        } else {
            instance_destroy();
        }
    } else {
        instance_destroy();
    }
}
timeline_running = false;
timeline_position = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </entry>
</timeline>
